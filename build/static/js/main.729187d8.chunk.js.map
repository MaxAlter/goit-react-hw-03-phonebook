{"version":3,"sources":["components/ContactForm/PhoneBook.module.css","components/ContactList/list.module.css","components/ContactList/ContactList.module.css","components/ContactForm/contactForm.js","components/ContactList/list.js","components/ContactList/contactList.js","components/filter/filter.js","App.js","index.js","components/filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","userId","shortid","generate","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onHandleForm","this","className","style","contactForm","onSubmit","contactForm_label","htmlFor","contactForm_input","type","onChange","id","autoComplete","contactForm_button","Component","List","onDeleteList","list","button","onClick","ContactList","items","length","contactList","map","item","key","Filter","onChangeFilter","formFilter","formName_label","formName_input","placeholder","App","contacts","filter","handleForm","addItems","find","alert","contact","prevState","deleteList","handleFIlter","persistedTasks","localStorage","getItem","JSON","parse","setItem","stringify","filterContact","toLowerCase","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.729187d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"PhoneBook_contactForm__2lyuz\",\"contactForm_label\":\"PhoneBook_contactForm_label__2ZtyU\",\"contactForm_input\":\"PhoneBook_contactForm_input__3Ak-p\",\"contactForm_button\":\"PhoneBook_contactForm_button__enTgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__i2NLP\",\"button\":\"list_button__24br3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2SkB-\"};","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport style from \"./PhoneBook.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n  \r\n\r\n  userId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onHandleForm({ ...this.state });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Name\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.userId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Number\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button className={style.contactForm_button} type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./list.module.css\";\r\n\r\nconst List = ({ name, number, onDeleteList }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className={style.list}>\r\n        {number} : {name}\r\n        <button className={style.button} type=\"button\" onClick={onDeleteList}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteList: PropTypes.func.isRequired\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"./list\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ items, onDeleteList }) => {\r\n  return (\r\n    items.length > 0 && (\r\n      <ul className={style.contactList}>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            <List {...item} onDeleteList={() => onDeleteList(item.id)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteList: PropTypes.func.isRequired\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form className={style.formFilter}>\r\n      <label className={style.formName_label}>Find Contacts by Name</label>\r\n      <input\r\n        className={style.formName_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\"Type to filter contacts...\"\r\n        autoComplete=\"off\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport ContactForm from \"./components/ContactForm/contactForm\";\nimport ContactList from \"./components/ContactList/contactList\";\nimport Filter from \"./components/filter/filter\";\n\n\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n\n    if (persistedTasks) {\n      const contacts = JSON.parse(persistedTasks);\n\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleForm = (items) => {\n    let addItems = this.state.contacts.find((item) => item.name === items.name);\n\n    if (this.state.contacts.length > 0 && addItems) {\n      alert(`contact with name ${items.name} is allready exist`);\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name: items.name,\n        number: items.number,\n      };\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  deleteList = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n  \n\n  handleFIlter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filterContact = filterContacts(contacts, filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onHandleForm={this.handleForm} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.handleFIlter} />\n        <ContactList items={filterContact} onDeleteList={this.deleteList} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFilter\":\"Filter_formFilter__1KsHD\",\"formName_label\":\"Filter_formName_label__WULws\",\"formName_input\":\"Filter_formName_input__1Pt_N\"};"],"sourceRoot":""}